# Nginxのサーバーブロック定義
server {
    # 待ち受けるポート番号
    listen 80;
    # サーバー名 (ローカル開発なのでlocalhost)
    server_name localhost;
    charset utf-8;

    # ドキュメントルート (PHPコンテナとパスを合わせる)
    root /var/www/public;
    # デフォルトで探すファイル
    index index.php index.html index.htm;

    # ログファイルの場所
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/errors/error.log;

    # ------------------------
    # 共通フロント（ルートURL: /）
    # ------------------------
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # ------------------------
    # /agent サブアプリ（Laravel）
    # ------------------------
    location ^~ /agent {
        # alias を使用（URI /agent → /var/www/agent/public 以下）
        alias /var/www/agent/public;
        index index.php;

        # 静的ファイルやディレクトリがあればそれを返す。
        try_files $uri $uri/ @agent;

        # PHP ファイルの処理
        location ~ \.php$ {
            # SCRIPT_FILENAME は固定 index.php を指定
            fastcgi_param SCRIPT_FILENAME /var/www/agent/public/index.php;
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi_params;
            fastcgi_pass php:9000;
        }
    }

    # Laravel 内のルーティング用 fallback リライト
    location @agent {
        rewrite ^/agent/(.*)$ /agent/index.php last;
    }

    # ------------------------
    # /language サブアプリ（Laravel）
    # ------------------------
    location ^~ /language {
        alias /var/www/language/public;
        index index.php;

        try_files $uri $uri/ @language;

        location ~ \.php$ {
            fastcgi_param SCRIPT_FILENAME /var/www/language/public/index.php;
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi_params;
            fastcgi_pass php:9000;
        }
    }

    location @language {
        rewrite ^/language/(.*)$ /language/index.php last;
    }

    # ------------------------
    # セキュリティ: .htaccess 等をブロック
    # ------------------------
    location ~ /\.ht {
        deny all;
    }
}