# =====================================================
# Laravel 開発環境の Docker Compose 定義
# nginx + php-fpm + mariadb + phpmyadmin の4コンテナ構成
# =====================================================

# Docker Compose のバージョン指定は省略可能（v1.27以降は不要）
# version: '3.8'

services:
  nginx:
    build:
      context: ./docker-config/nginx           # Nginx用Dockerfileの場所
      dockerfile: Dockerfile                    # Dockerfile名

    container_name: ${COMPOSE_PROJECT_NAME}-nginx  # コンテナ名の命名規則

    ports:
      - "${NGINX_PORT}:80"                      # ホストの${NGINX_PORT}番をNginxの80番にマッピング

    volumes:
      - ./my-app:/var/www                       # Laravelアプリケーションのコードを共有マウント
      - ./docker-config/nginx/default.conf:/etc/nginx/conf.d/default.conf  # Nginx設定をマウント
      - ./docker-config/errors:/var/log/nginx/errors                       # エラーログ保存場所をマウント

    depends_on:
      - php                                     # php-fpmが起動してからNginxを起動

    networks:
      - app-network                             # サービス間通信のためのネットワーク指定

  php:
    build:
      context: ./docker-config/php              # PHP用Dockerfileの場所
      dockerfile: Dockerfile

    container_name: ${COMPOSE_PROJECT_NAME}-php

    volumes:
      - ./my-app:/var/www                       # Laravelコード共有
      - ./docker-config/php/php.ini:/usr/local/etc/php/php.ini            # php.ini 設定
      - ./docker-config/errors:/var/log/php-fpm/errors                    # PHPエラーログマウント

    environment:
      DB_HOST: db                              # MariaDBのコンテナ名（docker-compose内ホスト名）
      DB_PORT: 3306
      DB_DATABASE: ${MARIADB_DATABASE}         # Laravel .envのDB_DATABASEに対応
      DB_USERNAME: ${MARIADB_USER}              # Laravel .envのDB_USERNAMEに対応
      DB_PASSWORD: ${MARIADB_PASSWORD}          # Laravel .envのDB_PASSWORDに対応
      TZ: ${TZ}                                # タイムゾーン設定

    depends_on:
      - db                                     # DBコンテナが先に起動している必要あり

    networks:
      - app-network

  db:
    build:
      context: ./docker-config/db/conf         # MariaDB Dockerfile のパス
      dockerfile: Dockerfile

      args:
        MARIADB_VERSION: ${MARIADB_VERSION}    # Dockerfileへ渡す MariaDB バージョン
    
    # Dockerfileを使用しないため、buildセクションを削除し、imageプロパティで直接指定します。
    # image: mariadb:${MARIADB_VERSION}          # MariaDBの公式イメージを直接使用


    container_name: ${COMPOSE_PROJECT_NAME}-db

    restart: always                            # DBコンテナ落ちたら自動再起動
    tty: true                                  # ログのリアルタイム監視用

    environment:
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}    # root パスワード設定
      MYSQL_DATABASE: ${MARIADB_DATABASE}               # 初期作成DB名
      MYSQL_USER: ${MARIADB_USER}                        # アプリ用ユーザー名
      MYSQL_PASSWORD: ${MARIADB_PASSWORD}                # アプリ用パスワード

    volumes:
      - db-data:/var/lib/mysql                            # DBデータ永続化ボリューム
      - ./docker-config/db/conf/my.conf:/etc/mysql/conf.d/my.conf  # MariaDB設定マウント
      - ./docker-config/db/sql:/docker-entrypoint-initdb.d       # 初期SQLを自動実行

    ports:
      - "3306:3306"                                       # ホストからのDB接続用ポートマッピング

    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest                   # phpMyAdmin公式イメージ
    platform: linux/amd64                                 # Apple Silicon対応

    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin

    restart: always

    environment:
      PMA_HOST: db                                        # 接続先DBホスト名（サービス名）
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}       # rootパスワード

    ports:
      - "${PHPMYADMIN_PORT}:80"                           # ホストからphpMyAdminへアクセスするポート

    depends_on:
      - db

    networks:
      - app-network

volumes:
  db-data:
    driver: local                                         # 永続化ボリューム定義

networks:
  app-network:
    driver: bridge                                       # ブリッジネットワーク設定
